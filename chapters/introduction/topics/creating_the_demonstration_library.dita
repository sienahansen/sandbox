<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="creating_the_demonstration_library">
          <title>Creating the demonstration library</title>
          <body>
            <p><b>Important:</b> The administrator installing the LDK should complete the steps in
      this section. Creation of the demonstration library is required so that labs can run.</p>
            <p>The demonstration library is created using a supplied Python
script. The recommended Python version to run the script is v3.7,
or higher, for access to the modules used in the script, use
<i>pip install &lt;module_name&gt;</i>.</p>

            <p>The library of standard cells used for the LDK must be created
from standard cell libraries provided by Intel. The LDK can be
built with a large list of standard cells (397) or a smaller list
(7). <xref href="#creating_the_demonstration_library/Ref168329078">Table 7</xref> outlines the required
libraries to run the demonstration.</p>
            <p>
      <note id="note_vfy_fmb_mcc">It is recommended that you choose the smaller list; all remaining
        tasks using this collateral proceed much more quickly and are better for learning purposes.
        If, however, you want to test your compute infrastructure and tool capabilities, use the
        larger list.</note>
    </p>
            <table colsep="1" frame="all" id="Ref168329078" rowsep="1">
              <title>Required libraries to have available before running this demonstration</title>
              <tgroup cols="3">
                <colspec colname="col1" colnum="1" colwidth="0.7*"/>
                <colspec colname="col2" colnum="2" colwidth="1.3*"/>
                <colspec colname="col3" colnum="3" colwidth="1*"/>
                <thead>
                  <row>
                    <entry>Type</entry>
                    <entry>Library</entry>
                    <entry>Needed for list</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>Base</entry>
                    <entry>lib783_i0m_180h_50pp_base_hvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Base</entry>
                    <entry>lib783_i0m_180h_50pp_base_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Base</entry>
                    <entry>lib783_i0m_180h_50pp_base_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Base</entry>
                    <entry>lib783_i0m_180h_50pp_base_ulvt</entry>
                    <entry>Large, Small</entry>
                  </row>
                  <row>
                    <entry>Clk</entry>
                    <entry>lib783_i0m_180h_50pp_clk_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Clk</entry>
                    <entry>lib783_i0m_180h_50pp_clk_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Clk</entry>
                    <entry>lib783_i0m_180h_50pp_clk_ulvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Lvl</entry>
                    <entry>lib783_i0m_180h_50pp_lvl_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Lvl</entry>
                    <entry>lib783_i0m_180h_50pp_lvl_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Lvl</entry>
                    <entry>lib783_i0m_180h_50pp_lvl_ulvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Pwm</entry>
                    <entry>lib783_i0m_180h_50pp_pwm_hvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Pwm</entry>
                    <entry>lib783_i0m_180h_50pp_pwm_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Pwm</entry>
                    <entry>lib783_i0m_180h_50pp_pwm_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Pwm</entry>
                    <entry>lib783_i0m_180h_50pp_pwm_ulvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Seq</entry>
                    <entry>lib783_i0m_180h_50pp_seq_hvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Seq</entry>
                    <entry>lib783_i0m_180h_50pp_seq_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Seq</entry>
                    <entry>lib783_i0m_180h_50pp_seq_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Seq</entry>
                    <entry>lib783_i0m_180h_50pp_seq_ulvt</entry>
                    <entry>Large, Small</entry>
                  </row>
                  <row>
                    <entry>Spcl</entry>
                    <entry>lib783_i0m_180h_50pp_spcl_hvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Spcl</entry>
                    <entry>lib783_i0m_180h_50pp_spcl_lvt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Spcl</entry>
                    <entry>lib783_i0m_180h_50pp_spcl_svt</entry>
                    <entry>Large</entry>
                  </row>
                  <row>
                    <entry>Spcl</entry>
                    <entry>lib783_i0m_180h_50pp_spcl_ulvt</entry>
                    <entry>Large</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
            <p>The script's output is a command file containing the actions
required to copy the necessary cells to the
$INTEL_LDK/training/libraries/ldk_demo_lib/ directory.</p>
            <p><xref href="#creating_the_demonstration_library/Ref168326490"/> describes the base
      case of running the Python script, from finding all library paths to command file
      generation:</p>
            <table colsep="1" frame="all" id="Ref168326490" rowsep="1">
              <title>Description of Python script arguments</title>
              <tgroup cols="2">
                <colspec colname="col1" colnum="1" colwidth="1*"/>
                <colspec colname="col2" colnum="2" colwidth="1*"/>
                <thead>
                  <row>
                    <entry>Arguments</entry>
                    <entry>Entry Format</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>R: root path to standard libraries</entry>
                    <entry>Requires full path entry.</entry>
                  </row>
                  <row>
                    <entry>L: path of file with library paths</entry>
                    <entry>May be either filename or path entry.</entry>
                  </row>
                  <row>
                    <entry>M: path of master cell name-library pairs</entry>
                    <entry>May be either filename or path entry.</entry>
                  </row>
                  <row>
                    <entry>C: file of cells to be copied</entry>
                    <entry>One cell name per line.</entry>
                  </row>
                  <row>
                    <entry>N: new library path</entry>
                    <entry>Requires full path entry.</entry>
                  </row>
                  <row>
                    <entry>CF: commands file name</entry>
                    <entry>May be either filename or path entry.</entry>
                  </row>
                  <row>
                    <entry>V: view(s) to be copied</entry>
                    <entry>Must be of the format <i>layout:schematic:abstract:</i>, and so
              on.</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
            <ol>
      <li>Change the directory to $INTEL_LDK/training/libraries/scripts</li>
      <li>Obtain the necessary arguments for each command line entry: <ol id="ol_wls_4mb_mcc">
          <li>The full path to the directory containing the standard cell libraries, referred to as
            &lt;LDK_STDCELL_LIBRARY_ROOT&gt;.</li>
          <li>The path to the file listing cells to be copied:
            <b>/path/to/CellsToBeCopied.txt</b></li>
        </ol><note id="note_aqb_pmb_mcc">This is the only <b>input</b> file necessary for the
          script; choose from CellsToBeCopied_7.txt (small) or CellsToBeCopied_397.txt
          (large).</note></li>
      <li>Run the script to generate the necessary files for command file
          creation:<codeblock id="codeblock_hhx_qmb_mcc">./demo_lib_create.py [-r R] [-l L] [-m M] [-c C] [-cf CF] [-n N] [-v V]</codeblock><p>Filenames
          may be used as command line entries, as seen in <xref
            href="#creating_the_demonstration_library/Ref168326490"/>, for files to be generated in
          the current working directory; otherwise, the full or relative path is necessary for the
          script. </p><ol id="ol_tnw_tmb_mcc">
          <li>Sample command line entry: (output files are in
            <b>green</b>)<codeblock id="codeblock_g34_5mb_mcc">./demo_lib_create.py -r &lt;LDK_STDCELL_LIBRARY_ROOT&gt; -l <b>librarySearchPaths.txt</b> -m <b>mastercellLibPairs.txt</b> -c CellsToBeCopied.txt -cf <b>copyCommands.csh</b> -n <b>$INTEL_LDK/training/libraries/ldk_demo_lib</b> -v layout:abstract</codeblock></li>
        </ol><note id="note_rfc_xmb_mcc">For all views of a cell to be copied, use <i>-v
          all</i></note></li>
      <li>After executing the command, finding the library paths might take a couple minutes. When
        finished, the command file to create the new library will appear as specified. <ol
          id="ol_pxx_mnb_mcc">
          <li>Run the command file to create the desired library and cells (<xref
              href="#creating_the_demonstration_library/fig_y3v_bhg_ncc"/>):
            <codeblock id="codeblock_twh_zmb_mcc">source copyCommands.csh</codeblock></li>
        </ol><p>
          <fig id="fig_y3v_bhg_ncc">
            <title>Commands executed on the terminal from commandsFile.txt</title>
            <image href="../images/introduction_environment_presetup_for_administrator_01.png"
              id="image_kxl_fhg_ncc"/>
          </fig>
          <table frame="all" rowsep="1" colsep="1" id="table_rgp_n4b_mcc">
            <title>Description of additional script purposes</title>
            <tgroup cols="3">
              <colspec colname="c1" colnum="1" colwidth="1*"/>
              <colspec colname="c2" colnum="2" colwidth="1*"/>
              <colspec colname="c3" colnum="3" colwidth="1*"/>
              <thead>
                <row>
                  <entry>Cases</entry>
                  <entry>Arguments</entry>
                  <entry>Purpose</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>Case 1</entry>
                  <entry>&lt;input&gt;<p>R: root path to STDCELL
                      libraries</p><p>&lt;output&gt;</p><p>L: file with library paths</p></entry>
                  <entry>The script will create a file listing all library paths where standard
                    cells exist.</entry>
                </row>
                <row>
                  <entry>Case 2</entry>
                  <entry>&lt;input&gt;<p>L: library path file from Case
                      1</p><p>&lt;output&gt;</p><p>M: file containing cell name-library
                    pairs</p></entry>
                  <entry>The script uses the output file from Case 1 to create the master
                    cell-library file.</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </p><p>Additionally, the Python script allows you to run separate commands in three separate
          cases, carrying out the same functionality as the base case run but in three individual
          steps, as seen in <xref href="#creating_the_demonstration_library/Ref168326490"/>:</p><ul
          id="ul_oj2_r4b_mcc">
          <li>To run Case 1:
            <codeblock id="codeblock_ssp_rnb_mcc">./demo_lib_create.py -r &lt;LDK_STDCELL_LIBRARY_ROOT&gt; -l librarySearchPaths.txt</codeblock></li>
        </ul><ul id="ul_wnn_snb_mcc">
          <li>To run Case
            2:<codeblock id="codeblock_t5r_5nb_mcc">./demo_lib_create.py -l librarySearchPaths.txt -m mastercellLibPairs.txt</codeblock></li>
          <li>To run Case
            3:<codeblock id="codeblock_mtg_wnb_mcc">./demo_lib_create.py -m mastercellLibPairs.txt -c CellsToBeCopied.txt -cf commandsfile.txt -n $INTEL_LDK/training/libraries/ldk_demo_lib -v layout:abstract</codeblock></li>
        </ul><p>
          <note id="note_w5k_ynb_mcc">The entry format for the values in each case is as described
            in <xref href="#creating_the_demonstration_library/Ref168326490"/>, and as described
            above for the base case. <p>For additional help, use: ./demo_lib_create.py
            [-h]</p></note>
        </p></li>
      <li>Because the new cells and views are copied into the ldk_demo_lib included in the cds.lib
        file, start a new session or refresh an existing session of the Cadence Virtuoso* Library
        Manager to see the new content.</li>
    </ol>
          </body>
        </topic>